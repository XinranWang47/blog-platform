
export const articles = [
  {
    id: 1,
    title: '🛠️ How I Fixed a TypeScript Error',
    description: 'I ran into a strange TypeScript error and after hours of debugging, I finally found the issue...',
    content: 'After much frustration, I found that the error was caused by a missing type declaration in one of my files. It took me hours to track down the issue, but once I added the correct type definition, everything worked perfectly. The experience taught me the importance of reading the error messages carefully and double-checking types when working with TypeScript.',
    category: 'TypeScript',
    date: '2024-09-01',
  },
  {
    id: 2,
    title: '🧠 A Quick Story of Debugging and Learning',
    description: 'Sometimes bugs are blessings in disguise. Here’s what I learned from a recent one...',
    content: 'A recent bug had me stumped for hours, but it ended up being a great learning opportunity. I was debugging an issue with state management in React, and after trying several different approaches, I finally realized the problem was with the way I was handling side effects in useEffect. By fixing this, I learned the value of rethinking the logic before diving into the code.',
    category: 'Debugging',
    date: '2024-09-10',
  },
  {
    id: 3,
    title: '⚛️ React Hooks: What I Wish I Knew Sooner',
    description: 'useEffect, useMemo, and useRef can be tricky at first, but here’s what finally made it click for me.',
    content: 'When I first started using React Hooks, I was confused about when to use each one. It wasn’t until I understood the concept of "dependency arrays" in useEffect and realized how useMemo could help optimize rendering that it all clicked. Now, I use them with confidence, and my code is much more efficient and easy to manage.',
    category: 'React',
    date: '2024-09-15',
  },
  {
    id: 4,
    title: '📓 My Journey from HTML to Fullstack',
    description: 'I started with basic HTML and CSS, but the real challenge came when I moved to backend...',
    content: 'My journey into fullstack development began with learning HTML and CSS. The real challenge started when I ventured into backend technologies. I had to learn about server-side languages, databases, and API integration. It was tough, but as I built more projects, everything started to come together. Fullstack development is definitely challenging, but it’s also incredibly rewarding.',
    category: 'Life',
    date: '2024-10-01',
  },
  {
    id: 5,
    title: '🧩 Solving a CSS Layout Puzzle',
    description: 'Flexbox or Grid? Here’s how I finally made my layout behave the way I wanted.',
    content: 'For a long time, I struggled to choose between Flexbox and CSS Grid for creating layouts. It wasn’t until I tried combining both that I finally achieved the layout I envisioned. I used Grid for the overall structure and Flexbox for alignment within the items. The result was clean and responsive, and I was amazed at how both tools complemented each other.',
    category: 'CSS',
    date: '2024-10-05',
  },
  {
    id: 6,
    title: '🎨 Creating a Beautiful UI with Tailwind CSS',
    description: 'Tailwind has completely changed the way I style my components. Here’s my current setup and why I love it.',
    content: 'Tailwind CSS has revolutionized the way I approach styling. With its utility-first classes, I can quickly build responsive and custom designs without writing much custom CSS. I’ve integrated Tailwind into my workflow with PostCSS and set up a custom configuration to match my project’s branding. The best part is how easily I can adapt my UI for different screen sizes without fuss.',
    category: 'Tailwind',
    date: '2024-10-08',
  },
  {
    id: 7,
    title: '🧪 Writing Better Unit Tests with Vitest',
    description: 'Testing doesn’t have to be painful. I switched to Vitest and this is how it improved my workflow...',
    content: 'Switching to Vitest has made unit testing a lot more enjoyable. With its fast test execution and built-in features like snapshot testing and mocking, I was able to simplify my test setup. Vitest is great for testing modern JavaScript applications and has become my go-to tool for ensuring my code is both correct and maintainable.',
    category: 'Testing',
    date: '2024-10-12',
  },
  {
    id: 8,
    title: '🌐 Understanding useEffect Dependencies',
    description: 'Ever had an infinite loop in useEffect? You’re not alone. Let’s talk dependencies.',
    content: 'One of the most common pitfalls with React’s useEffect is dealing with dependencies. I used to run into infinite loops whenever I forgot to specify dependencies properly. After learning how to manage them correctly, I was able to avoid unnecessary re-renders and make my components more efficient. Understanding how useEffect dependencies work has been a game changer for my React apps.',
    category: 'React',
    date: '2024-10-15',
  },
  {
    id: 9,
    title: '📦 Setting Up My First Vite + React Project',
    description: 'After years with create-react-app, Vite felt like a breath of fresh air. Here’s my setup and what I learned.',
    content: 'I had been using create-react-app for years, but when I decided to try Vite, I was blown away by its speed and simplicity. Vite offers fast hot-module replacement and a smooth development experience right out of the box. Setting it up with React was straightforward, and I quickly appreciated how much faster it was compared to the traditional bundler setups.',
    category: 'Frontend',
    date: '2024-10-18',
  },
];
